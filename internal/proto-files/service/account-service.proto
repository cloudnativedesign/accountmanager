syntax = "proto3";

package service;

option go_package = "internal/gRPC/service";

import "internal/proto-files/domain/account.proto";


// AccountService Definition
service AccountService {
    // CRUD
    rpc add (domain.Account) returns (AddAccountResponse);
    rpc update (domain.Account) returns (UpdateAccountResponse);
    // rpc delete (DeleteAccountRequest) returns (DeleteAccountResponse);

    // Methods
    rpc connect (ConnectionRequest) returns (ConnectionResponse);
    rpc disconnect (DisconnectionRequest) returns (DisconnectionResponse);
}

// CRUD MESSAGES
message AddAccountResponse {
    domain.Provider provider = 1;
    int32 status = 2;
    domain.Account account = 3;
}
message UpdateAccountResponse {
    int64 id = 1;
    int32 status = 2;
    domain.Account account = 3;
}


message ConnectionRequest {
    domain.Provider provider = 1;
    string user_name = 2;
    string password = 3;
}
message ConnectionResponse {
    domain.Provider provider = 1;
    int32 status = 2;
    string token = 3;
}

message DisconnectionRequest {
    domain.Provider provider = 1;
    string user_name = 2;
    string token = 3;
}
message DisconnectionResponse {
    int32 status = 1;
}